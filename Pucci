import pandas as pd
import numpy as np
import seaborn as sns
import  matplotlib.pyplot as plt
import sys, os

df = pd.read_csv('D:\\Pucci\\TickData_Agg\\EURUSD.csv')
df_trades =  pd.read_csv('D:\\AddTrades\\EURUSD_trades.csv')

# Identify the index where our trades take place

idx_list = []

for datetime in df_trades.Datetime:
    idx = df[df.Datetime == datetime].index
    idx_list.append((idx[0]))

# SEE NOTE BELOW

open_values = []
close_values = []
df_drawdown = []
ttc_list = []

for ttc in df_trades.TTC:
    ttc_list.append(int(ttc))

# Open values of when we get into a trade 
for idx in idx_list:
    open_value = df.get_value(idx, 'Open')
    open_values.append(open_value)
    #print(open_values)


# close value has to stop at start: start + TTC value for the trade. 
for i in range(len(idx_list)):
    val = df.Close[idx_list[i]:(idx_list[i]+(ttc_list[i])):1]
    #print(val)
    #print (open_values[i])
    drawdown = ((open_values[i] - val)/open_values[i])*100
    df_drawdown.append(drawdown)

# Note: df_drawdown contains the running drawdown for each individual trade.

# Average of Drawdowns for each trade. 

average = [] 
for i in range(len(idx_list)):
    avg = np.mean(df_drawdown[i])
    average.append(avg) # contains array for the average drawdown for each trade, while in a trade. average drawdown per trade that i was able to load on my computer.

# Function - Calculate the drawdown distribution at each candle - Inputs: Candle, ex Candle 0, first candle etc.  indexlist: data that contains the indexes of our trades, data: drawdown distribution for each
# trade taken. 

def candledrawdown_distribution(candle,indexlist,data):
    
    distribution = []
    candle_distribution = []
    filtered_candle_dist = []
    
    for i in range(len(indexlist)):
        distribution.append(data[i])
        sample_df = pd.Series.to_frame(distribution[i])
        
        try:
            candle_distribution.append(sample_df.iloc[candle].values)
        except IndexError:
            candle_distribution.append(None) #look at fixing this
    
        filtered_dist = filter(None,candle_distribution)
        
        for val in filtered_dist:
            filtered_candle_dist.append(val)
    
    return (filtered_candle_dist)
  
 # Candle 0 - Candle 10 Visualization NOTE this is repeated for candle 10-20, 20-30, etc etc. 

for candle in range(0,10):
    val = candledrawdown_distribution(candle,idx_list,df_drawdown)
    plt.figure()
    figure = sns.distplot(val,bins=40).set_title("Candle" + " " + str(candle))
    plt.xlabel("Drawdown Percentage")
    plt.ylabel("Frequency")
    plt.show(figure)
    print(pd.DataFrame(val).describe())
